#!/usr/bin/env bash

# This script helps to clean a directory without deleting the files

# It sets all the contents of the `pwd` directory inside of a new directory
# (called `oldX` where X is a number). This is like a "trash" folder but attached
# to the current directory also a new "trash" folder is created each time `age`
# is run (incrementing the largest X number by 1) but only the files and
# directories that does not have a name like `oldX` are moved to the new
# `old` directory this helps organizing the trash temporally (all the contentes
# of oldN-1 are older than the contents of oldN).

# Example1: before age : `pwd`-(file1,file2,file3)
#           after  age : `pwd`-old1-(file1,file2,file3)

# Example2: before age : `pwd`--old1-(file1,file2,file3)
#                             |-(file5,folder1,file6)
#                             
#           after  age : `pwd`--old1-(file1,file2,file3)
#                             |-old2-(file5,folder1,file6)

# TODO:
# * Dynamic padding with 0:
#   * Numbers with less digits than the max age should padded with 0 to match the max age digit count
#   * Right now the padding is fixed and large (6):
#     * This causes problems when age is above 999999
#     * The padding is not efficient when max age is low

# * An option to fill the age gaps (possible when the user deleltes an old folder)

set -o errexit      # Exit on most errors (see the manual)
set -o nounset      # Disallow expansion of unset variables
set -o pipefail     # Use last non-zero exit code in a pipeline
set -o errtrace     # Ensure the error trap handler is inherited

# echo "This will modify the files contained in $(pwd)"
# printf "Are you sure?[y/N]:"
# read awns
# [ "$awns" = "y" ] || exit 0

filesToAge=$(ls | grep -Ev "^old([0-9])+" || true)

if [ -z "$filesToAge" ] ; then
  echo "Nothing to age"
  exit -1
fi

currentAge=$(ls | grep -E "^old([0-9])+" | sed -E 's/old(0)*//g'  | tail -1 || true)

if [ -z $currentAge ] ; then
  newAge=1
else
  ((newAge=currentAge+1))
fi

echo "Happy $newAge birthday"

newAgeDir="old$(printf "%06d" "$newAge")"


mkdir $newAgeDir


OLD_IFS=$IFS
IFS=$'\n'

mv $filesToAge $newAgeDir

IFS=$OLD_IFS

